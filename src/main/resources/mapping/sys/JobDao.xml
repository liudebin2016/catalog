<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jusfoun.catalog.dao.JobDao" >
<!-- 
  <resultMap id="BaseResultMap" type="com.jusfoun.catalog.entity.Job" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="duty" property="duty" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jusfoun.catalog.entity.Job" extends="BaseResultMap" >
    <result column="remarks" property="remarks" jdbcType="LONGVARCHAR" />
  </resultMap>
 -->
  <sql id="Base_Column_List" >
    id, name, duty, type, create_by, create_date, update_by, update_date, del_flag
  </sql>
  <sql id="Blob_Column_List" >
    remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jusfoun.catalog.entity.Job" >
    insert into job (id, name, duty, 
      type, create_by, create_date, 
      update_by, update_date, del_flag, 
      remarks)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{duty,jdbcType=VARCHAR}, 
      #{type,jdbcType=CHAR}, #{createBy.id,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy.id,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=CHAR}, 
      #{remarks,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jusfoun.catalog.entity.Job" >
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="duty != null" >
        duty,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="duty != null" >
        #{duty,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy.id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy.id,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jusfoun.catalog.entity.Job" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 07 16:22:18 CST 2016.
    -->
    update job
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="duty != null" >
        duty = #{duty,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy.id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy.id,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jusfoun.catalog.entity.Job" >
    update job
    set name = #{name,jdbcType=VARCHAR},
      duty = #{duty,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      create_by = #{createBy.id,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy.id,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR},
      remarks = #{remarks,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jusfoun.catalog.entity.Job" >
    update job
    set name = #{name,jdbcType=VARCHAR},
      duty = #{duty,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      create_by = #{createBy.id,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy.id,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="createJob" parameterType="com.jusfoun.catalog.entity.Job"  keyProperty="id">
 <selectKey resultType="int" keyProperty="id">  
   SELECT catalog_seq.currval  as id FROM DUAL  
   </selectKey> 
   insert into job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="duty != null" >
        duty,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="officeId != null" >
        office_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="duty != null" >
        #{duty,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy.id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy.id,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
      <if test="officeId != null" >
        #{officeId,jdbcType=INTEGER},
      </if> 
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="findListCount" resultType="int">
   select count(a.id) from(
	  	SELECT 
  		count(j.id)	 as id
  			FROM 
  		job j
	INNER JOIN sys_office s ON j.office_id = s.id
	INNER JOIN job_business jb ON j.id = jb.job_id
	INNER JOIN business b ON jb.business_id = b.id and j.del_flag =0 and s.del_flag=0
  	<trim prefix="WHERE" prefixOverrides="AND|OR">  
	    <if test="name!=null and name!='' ">  
	        j.name like #{name}
	    </if>  
	   <!--  <choose>
	    	<when test="status!= 0 and status != null">
	    		 AND r.apply_flag=#{status}  
	    	</when>
	    	<when test="status == 0">
	    		 AND r.apply_flag is null  
	    	</when>
	    </choose> -->
	     <if test="status!= null ">  
	        AND j.status=#{status}  
	    </if> 
	</trim>	
		 GROUP BY j.id ) a
  </select>
   <select id="findListCountByOfficeId" resultType="int">
   select count(a.id) from(
	  	SELECT count(j.id) as id
  	from job j 
  	
	INNER JOIN sys_office s ON j.office_id = s.id
	INNER JOIN job_business jb ON j.id = jb.job_id
	INNER JOIN business b ON jb.business_id = b.id  and j.del_flag =0 and s.del_flag=0
  	<trim prefix="WHERE" prefixOverrides="AND|OR">  
	    <if test="jobName!=null and jobName!='' ">  
	        j.name like #{jobName}
	    </if>  
	    <if test="jobStatus!= null ">  
	        AND j.status=#{jobStatus}  
	    </if>   
	     <if test="jobType!= null ">  
	        AND j.type=#{jobType}  
	    </if> 
	     <if test="OfficeIds.size() !=0">
	    	AND s.id in 
	    	<foreach item="OfficeIds" index="index" collection="OfficeIds" open="(" separator="," close=")">  
  				#{OfficeIds}  
 			</foreach>
	    </if>
	</trim>	
		 GROUP BY j.id ) a
  </select>
  <select id="findJobList" resultType="JobAndOfficeView">
  SELECT *
FROM (
	SELECT tt.*, ROWNUM AS rowno
    FROM (  
  	 SELECT j.id,j.name as jobName,j.duty as jobDuty,j.type as jobType,j.status as jobStatus,s.name as officeName,
   		 b.id as businessId,b.name as businessName
    
    		from job j 
	    
	  INNER JOIN sys_office s ON j.office_id = s.id
	  INNER JOIN (SELECT j.id,jb.job_id as iid,wm_concat(to_char(b.name)) as name from job j   
	  INNER JOIN job_business jb ON j.id = jb.job_id
	  INNER JOIN business b ON jb.business_id = b.id 
	  group by j.id,jb.job_id)b   ON j.id = b.id and j.del_flag =0 and s.del_flag=0
  	<trim prefix="WHERE" prefixOverrides="AND|OR">  
	    <if test="name!=null and name!='' ">  
	        j.name like #{name}
	    </if>  
	    <!--<choose>
	    	<when test="status!= 0 and status != null">
	    		 AND r.apply_flag=#{status}  
	    	</when>
	    	<when test="status == 0">
	    		 AND r.apply_flag is null  
	    	</when>
	    </choose>-->
	     <if test="status!= null ">  
	        AND j.status=#{status}  
	    </if>   
	</trim>	
		 
		 ORDER BY j.status ASC,j.create_date desc
     ) tt
   WHERE ROWNUM <![CDATA[<= ${sqlMap.end}]]>
 ) ta  
 WHERE ta.rowno <![CDATA[>= ${sqlMap.start}]]>
  </select>
  
  <select id="findJobListByOfficeId" resultType="JobAndOfficeView">
  SELECT *
FROM (
	SELECT tt.*, ROWNUM AS rowno
    FROM (  
    	SELECT j.id,j.name as jobName,j.duty as jobDuty,j.type as jobType,j.status as jobStatus,s.name as officeName,
   		 b.id as businessId,b.name as businessName
    
    		from job j 
	    
	  INNER JOIN sys_office s ON j.office_id = s.id
	  INNER JOIN (SELECT j.id,jb.job_id as iid,wm_concat(to_char(b.name)) as name from job j   
	  INNER JOIN job_business jb ON j.id = jb.job_id
	  INNER JOIN business b ON jb.business_id = b.id 
	  group by j.id,jb.job_id)b   ON j.id = b.id and j.del_flag =0 and s.del_flag=0
  	<trim prefix="WHERE" prefixOverrides="AND|OR">  
	    <if test="jobName!=null and jobName!='' ">  
	        j.name like #{jobName}
	    </if>  
	    <if test="jobStatus!= null ">  
	        AND j.status=#{jobStatus}  
	    </if>  
	     <if test="jobType!= null ">  
	        AND j.type=#{jobType}  
	    </if>   
	    <if test="OfficeIds.size() !=0">
	    	AND s.id in 
	    	<foreach item="OfficeIds" index="index" collection="OfficeIds" open="(" separator="," close=")">  
  				#{OfficeIds}  
 			</foreach>
	    </if>
	</trim>	
		 <!-- GROUP BY j.id -->
		 ORDER BY j.status ASC,j.create_date desc
     ) tt
   WHERE ROWNUM <![CDATA[<= ${sqlMap.end}]]>
 ) ta  
 WHERE ta.rowno <![CDATA[>= ${sqlMap.start}]]>
  </select>
  
  <select id="selectById" parameterType="java.lang.String" resultType="com.jusfoun.catalog.entity.Job">
    select id,name,duty,type,create_by,create_date,update_by,update_date,del_flag,status,office_id as officeId
    from job
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <update id="updateById" parameterType="com.jusfoun.catalog.entity.Job" >
    update job
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="duty != null" >
        duty = #{duty,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy.id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy.id,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
      <if test="officeId != null" >
        office_id = #{officeId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findJobByCondition" resultType="JobAndOfficeView">
  	SELECT j.id,j.name as jobName,j.duty as jobDuty,j.type as jobType,j.status as jobStatus,s.name as officeName,
  	b.id as businessId,GROUP_CONCAT(b.`name`) as businessName
  	
  	from job j 
  	
	INNER JOIN sys_office s ON j.office_id = s.id
	INNER JOIN job_business jb ON j.id = jb.job_id
	INNER JOIN business b ON jb.business_id = b.id   GROUP BY j.id ORDER BY j.status ASC,j.update_date desc
  </select>
  
  <insert id="insertJob_business" parameterType="Map" >
      insert into job_business (job_id,business_id) values(#{jobId},#{businessId})
  </insert>
   <update id="updateJob_business" parameterType="com.jusfoun.catalog.entity.Job" >
      update job_business set business_id=#{businessId} where job_id=#{jobId}
  </update>
  <delete id="deleteById" parameterType="com.jusfoun.catalog.entity.Job" >
    delete from job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteJob_Bussiness" parameterType="com.jusfoun.catalog.entity.Job" >
    delete from job_business
    where job_id = #{id}
  </delete>
  
    <!-- 查询有效个数 -->
  <select id="getCount" resultType="java.lang.Long">
  	select count(id)
  	from job
  	where del_flag = 0
  </select>
  
    
  <!-- 为前面搜索而生 -->
  <select id="findSrhListCount" resultType="int">
  	SELECT 
  		count(id) 
  	FROM 
  		job
  	WHERE 
  		status=5 
  	AND 
  		del_flag=0
  	<if test="name!=null and name!='' ">  
    AND name like '%'||#{name}||'%' 
    </if>
    <if test="officeId!=null and officeId!='' ">  
    AND office_id = #{officeId}
    </if>
  </select>
  
  <select id="findSrhList" resultType="com.jusfoun.catalog.entity.Job">
  	  SELECT *
FROM (
	SELECT tt.*, ROWNUM AS rowno
    FROM (
    		SELECT 
		  		*
		  	FROM 
		  		job
		  	WHERE 
		  		status=5 
		  	AND 
		  		del_flag=0
		  	<if test="name!=null and name!='' ">  
		    AND name like '%'||#{name}||'%'
		    </if>
		    <if test="officeId!=null and officeId!='' ">  
		    AND office_id = #{officeId}
		    </if>
		    ORDER BY create_date desc
    	
     ) tt
   WHERE ROWNUM <![CDATA[<= ${sqlMap.end}]]>
 ) ta  
 WHERE ta.rowno <![CDATA[>= ${sqlMap.start}]]>
  </select>
  <select id="selectBusinessIdByJobId" resultType="java.lang.String" parameterType="java.lang.String">
  	select wm_concat(business_id) from job_business where job_id=#{id}
  </select>
  <select id="selectBusinessNaByJobId" resultType="JobAndOfficeView" parameterType="java.lang.String">
    select b.id as businessId,b.name as businessName from job_business jb,business b where jb.business_id=b.id and jb.job_id=#{id}
  </select>
  <select id="findJobsByOfficeId" resultType="com.jusfoun.catalog.entity.Job" parameterType="int">
  	select id,name,duty,type,create_by,create_date,update_by,update_date,del_flag,status,office_id as officeId 
  	from job 
  	where job.office_id=#{officeId} and del_flag=0
  </select>
</mapper> 